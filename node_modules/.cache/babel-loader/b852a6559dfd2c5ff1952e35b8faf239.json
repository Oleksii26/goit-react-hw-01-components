{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\goit-react-hw-01-components\\\\src\\\\components\\\\statistics\\\\Statistics.jsx\";\nimport css from './statistics.module.css';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Statistics = _ref => {\n  let {\n    /* title, */\n    stats\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: css.statistics,\n    children: [title && /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: css.title,\n      children: \"Upload stats\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: css.list,\n      children: stats.map(e => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: css.item,\n          style: {\n            backgroundColor: `${getRandomHexColor()}`\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: css.label,\n            children: e.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 10,\n            columnNumber: 114\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: css.percentage,\n            children: [e.percentage, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 21\n          }, this)]\n        }, e.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 24\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 12\n  }, this);\n};\n_c = Statistics;\n\nfunction getRandomHexColor() {\n  return `#${Math.floor(Math.random() * 16777215).toString(16)}`;\n}\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    percentage: PropTypes.number.isRequired\n  })).isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Statistics\");","map":{"version":3,"sources":["C:/Users/admin/Desktop/goit-react-hw-01-components/src/components/statistics/Statistics.jsx"],"names":["css","PropTypes","Statistics","stats","statistics","title","list","map","e","item","backgroundColor","getRandomHexColor","label","percentage","id","Math","floor","random","toString","propTypes","string","arrayOf","shape","isRequired","number"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,yBAAhB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,OAAO,MAAMC,UAAU,GAAG,QAA4B;AAAA,MAA3B;AAAE;AAAaC,IAAAA;AAAf,GAA2B;AAClD,sBAAO;AAAS,IAAA,SAAS,EAAEH,GAAG,CAACI,UAAxB;AAAA,eAEFC,KAAK,iBAAI;AAAI,MAAA,SAAS,EAAEL,GAAG,CAACK,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFP,eAGH;AAAI,MAAA,SAAS,EAAEL,GAAG,CAACM,IAAnB;AAAA,gBACKH,KAAK,CAACI,GAAN,CAAUC,CAAC,IAAI;AACZ,4BAAO;AAAI,UAAA,SAAS,EAAER,GAAG,CAACS,IAAnB;AAAyB,UAAA,KAAK,EAAE;AAAEC,YAAAA,eAAe,EAAG,GAAEC,iBAAiB,EAAG;AAA1C,WAAhC;AAAA,kCAA0F;AAAM,YAAA,SAAS,EAAEX,GAAG,CAACY,KAArB;AAAA,sBAA6BJ,CAAC,CAACI;AAA/B;AAAA;AAAA;AAAA;AAAA,kBAA1F,eACH;AAAM,YAAA,SAAS,EAAEZ,GAAG,CAACa,UAArB;AAAA,uBAAkCL,CAAC,CAACK,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA,kBADG;AAAA,WAAoFL,CAAC,CAACM,EAAtF;AAAA;AAAA;AAAA;AAAA,gBAAP;AAEH,OAHA;AADL;AAAA;AAAA;AAAA;AAAA,YAHG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAaH,CAdM;KAAMZ,U;;AAeb,SAASS,iBAAT,GAA6B;AACzB,SAAQ,IAAGI,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,QAA3B,EAAqCC,QAArC,CAA8C,EAA9C,CAAkD,EAA7D;AACH;;AAEDhB,UAAU,CAACiB,SAAX,GAAuB;AACnBd,EAAAA,KAAK,EAAEJ,SAAS,CAACmB,MADE;AAEnBjB,EAAAA,KAAK,EAAEF,SAAS,CAACoB,OAAV,CAAkBpB,SAAS,CAACqB,KAAV,CAAgB;AACrCR,IAAAA,EAAE,EAAEb,SAAS,CAACmB,MAAV,CAAiBG,UADgB;AAErCX,IAAAA,KAAK,EAAEX,SAAS,CAACmB,MAAV,CAAiBG,UAFa;AAGrCV,IAAAA,UAAU,EAAEZ,SAAS,CAACuB,MAAV,CAAiBD;AAHQ,GAAhB,CAAlB,EAIHA;AANe,CAAvB","sourcesContent":["import css from './statistics.module.css';\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const Statistics = ({ /* title, */ stats }) => {\r\n    return <section className={css.statistics}>\r\n\r\n        {title && <h2 className={css.title}>Upload stats</h2>}\r\n        <ul className={css.list}>\r\n            {stats.map(e => {\r\n                return <li className={css.item} style={{ backgroundColor: `${getRandomHexColor()}` }} key={e.id}><span className={css.label}>{e.label}</span>\r\n                    <span className={css.percentage}>{e.percentage}%</span></li>\r\n            })}\r\n\r\n        </ul>\r\n    </section>\r\n\r\n\r\n}\r\nfunction getRandomHexColor() {\r\n    return `#${Math.floor(Math.random() * 16777215).toString(16)}`;\r\n}\r\n\r\nStatistics.propTypes = {\r\n    title: PropTypes.string,\r\n    stats: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        label: PropTypes.string.isRequired,\r\n        percentage: PropTypes.number.isRequired,\r\n    })).isRequired,\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}